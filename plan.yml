- 
  plan :
    - plan :
        - recognize opportunity
    - do :
        - test change
        - small study
    - check:
        - measure
        - review the test
        - analyze results
        - learning 
    - act :
        - take larger action

-
  - create self modifying code :
      - parse ast data and extract interesting data from it
      - extract data from instance of object
      - not needed right now, because we can re-generate the entire thing from the rdf
  
-      
  - create python code representing the rdf data as close as possible
      - normalize names
      - create python names for urls
      - create imports for each needed prefix/module
      - store original names
      - create names for the ontology/namespace object
      - represent owl information as class level static data
      - evaluate data when needed on init:
          -  add in base class at runtime:
              ref : http://www.linuxjournal.com/node/4540/print
              example :
                "pyClass.__bases__ += mixInClass"

  - review namespaces:
      - review why some prefixes are not loaded
      - review new prefixes
      - track the type of each file/url in the namespace
      - parse rda and other formats in the librdf:
          - this might be supported
  - sort dependencies :
      - look at all fields that do not need imports, put them first
      - order members of the class by dependency
      - break circular dependancies
